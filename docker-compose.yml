services:
  db:
    image: bitnami/postgresql:15
    ports:
      - "5432:5432"
    environment:
      POSTGRESQL_PASSWORD: my_pass
      POSTGRESQL_DATABASE: cinema_service
      POSTGRESQL_USERNAME: my_service
    volumes:
      - ./db/:/docker-entrypoint-initdb.d/
      - data-db:/bitnami/postgresql

  zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami

  kafka:
    image: bitnami/kafka:3.4
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/bitnami

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8081:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka

  swagger:
    image: swaggerapi/swagger-ui:latest
    container_name: swagger-ui
    ports:
      - "8083:8080"
    environment:
      - URL=http://service-practice:8080/v3/api-docs.yaml

  jenkins:
    image: jenkins/jenkins:latest
    ports:
      - "8082:8080"
      - "50000:50000"
    volumes:
      - jenkins_data:/var/jenkins_home
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    restart: unless-stopped

  service-practice:
    image: service:1
    ports:
      - "8080:8080"
    volumes:
      - ./configuration:/app/config
    depends_on:
      - kafka

volumes:
  kafka_data:
  zookeeper_data:
  data-db: {}
  jenkins_data: